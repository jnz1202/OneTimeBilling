<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_nios2_onetimebil.one_time_bill_help</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Get service division that ASD user will work onã€‚&#13;
canSend, canResend</description>
        <name>one_time_bill_help</name>
        <script><![CDATA[var one_time_bill_help = Class.create();
one_time_bill_help.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    canSendBill: function(record) {
      
       // return (record.u_status == 'Draft' && (record.u_service_division.primary_contact == gs.getUserID() || record.u_service_division.u_organizational_unit == x_nios2_onetimebil.getAoOu() || record.u_service_division == x_nios2_onetimebil.getASDDivision() || record.u_service_division.u_organizational_unit.u_smas.toString().indexOf(gs.getUserID()) >= 0));
		 return (record.u_status == 'Draft' && (record.u_service_division.primary_contact == gs.getUserID() || (x_nios2_onetimebil.getAoOu()).contains(record.u_service_division.u_organizational_unit)>=0 || record.u_service_division == x_nios2_onetimebil.getASDDivision() || record.u_service_division.u_organizational_unit.u_smas.toString().indexOf(gs.getUserID()) >= 0));
    },

    canResendBill: function(record) {

       // return (record.u_status == 'Pending' && (record.u_service_division.primary_contact == gs.getUserID() || record.u_service_division.u_organizational_unit == x_nios2_onetimebil.getAoOu() || record.u_service_division == x_nios2_onetimebil.getASDDivision() || record.u_service_division.u_organizational_unit.u_smas.toString().indexOf(gs.getUserID()) >= 0));
 return (record.u_status == 'Pending' && (record.u_service_division.primary_contact == gs.getUserID() || (x_nios2_onetimebil.getAoOu()).contains(record.u_service_division.u_organizational_unit)>=0 || record.u_service_division == x_nios2_onetimebil.getASDDivision() || record.u_service_division.u_organizational_unit.u_smas.toString().indexOf(gs.getUserID()) >= 0));
    },

    canCancelBill: function(record) {
        //gs.info('AO: ' + record.u_service_division.u_organizational_unit== x_nios2_onetimebil.getAoOu());
        return (record.u_status == 'Pending' && (record.u_service_division.primary_contact == gs.getUserID() || (x_nios2_onetimebil.getAoOu()).contains(record.u_service_division.u_organizational_unit)>=0 || record.u_service_division == x_nios2_onetimebil.getASDDivision() || record.u_service_division.u_organizational_unit.u_smas.toString().indexOf(gs.getUserID()) >= 0));
    },

    canDeleteService: function(record) {
        return (record.u_active == true && ((x_nios2_onetimebil.getAoOu()).contains(record.u_service_division.u_organizational_unit)>=0 || record.u_service_division.primary_contact == gs.getUserID()));
    },

    getAsdDivision: function() {
        var uDiv = new GlideRecord('x_nios2_onetimebil_asd_users');
        uDiv.get(gs.getUserID());
        //gs.info('OTB help');
        if (uDiv.next()) {
            gs.info('get division: ' + uDiv.u_division);
            return uDiv.u_division;
        }

    },
    getAoOu: function(u) {
        var retArr = [];
		var divisions = new GlideRecord('cmn_department');
		divisions.addEncodedQuery('u_active=true^sys_class_name=cmn_department^primary_contact=' +gs.getUserID());
		divisions.query();
		while(divisions.next())
			retArr.push(divisions.u_organizational_unit.toString());
		return retArr;
    },
    type: 'one_time_bill_help'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>d_jnz17</sys_created_by>
        <sys_created_on>2018-10-23 17:36:22</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>d0e78b0adbd1ab00881ef30e0f96194c</sys_id>
        <sys_mod_count>41</sys_mod_count>
        <sys_name>one_time_bill_help</sys_name>
        <sys_package display_value="One Time Billing" source="x_nios2_onetimebil">3f5dbd7edbe8a30004c77d1d0f961949</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="One Time Billing">3f5dbd7edbe8a30004c77d1d0f961949</sys_scope>
        <sys_update_name>sys_script_include_d0e78b0adbd1ab00881ef30e0f96194c</sys_update_name>
        <sys_updated_by>jnz1202</sys_updated_by>
        <sys_updated_on>2021-03-30 12:05:50</sys_updated_on>
    </sys_script_include>
</record_update>
