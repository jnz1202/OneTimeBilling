<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_nios2_onetimebil_one_time_bill</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Add provider PTC</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	//get services
	var service = current.u_service_provided.sys_id;
	
	var svs = new GlideRecord('x_nios2_onetimebil_service_ptc');
	svs.addQuery('service_id', service);
	//svs.addAggregate('COUNT');
	svs.query();
	var totalPtc = 0;
	var addValue = false;
	while (svs.next()){
		totalPtc = totalPtc + 1;
		
	}
	if (totalPtc ==1){
		addValue =true;
	}
	//gs.info('one time bill: only one');
	//remove provider ptc if exist
	if (current.u_service_provided != previous.u_service_provided){
		var rmPtc = new GlideRecord('x_nios2_onetimebil_provider_ptc');
		rmPtc.addQuery('u_bill', current.sys_id);
		rmPtc.query();
		while(rmPtc.next()){
			//delete
			//gs.info('delete : provider PTC: ' + rmPtc.u_provider_ptc);
			rmPtc.deleteRecord();
		}
		
		//gs.info('total ptc: ' + totalPtc);
		var servicePtc = new GlideRecord('x_nios2_onetimebil_service_ptc');
		servicePtc.addQuery('service_id', service);
		
		servicePtc.query();
		while(servicePtc.next()){
			//svs.addQuery()
			
			var ptc = new GlideRecord('x_nios2_onetimebil_provider_ptc');
			ptc.initialize();
			ptc.u_bill = current.sys_id;
			ptc.u_provider_ptc = servicePtc.u_service_ptc.sys_id;
			if (addValue == true){
				//get service amount
				ptc.u_amount = current.u_service_amount;
			}
			
			ptc.insert();
		}}
	if ((current.u_service_amount != previous.u_service_amount) && (addValue == true)){
		//update provider ptc
		//gs.info('OTB: update');
		var pPtc = new GlideRecord('x_nios2_onetimebil_provider_ptc');
		pPtc.addQuery('u_bill', current.sys_id);
		pPtc.query();
		if (pPtc.next()){
		pPtc.u_amount = current.u_service_amount;
		pPtc.update();
		}
	}
	})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>d_jnz17</sys_created_by>
        <sys_created_on>2018-10-29 19:08:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>6f7616c8db2123405eabf20e0f961984</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Add provider PTC</sys_name>
        <sys_overrides/>
        <sys_package display_value="One Time Billing" source="x_nios2_onetimebil">3f5dbd7edbe8a30004c77d1d0f961949</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="One Time Billing">3f5dbd7edbe8a30004c77d1d0f961949</sys_scope>
        <sys_update_name>sys_script_6f7616c8db2123405eabf20e0f961984</sys_update_name>
        <sys_updated_by>d_jnz17</sys_updated_by>
        <sys_updated_on>2018-12-19 15:52:39</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
</record_update>
